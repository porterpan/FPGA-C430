// megafunction wizard: %ALTDQ%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: ALTDQ 

// ============================================================
// File Name: mydq.v
// Megafunction Name(s):
// 			ALTDQ
//
// Simulation Library Files(s):
// 			cycloneive
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 12.0 Build 178 05/31/2012 SJ Full Version
// ************************************************************


//Copyright (C) 1991-2012 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//altdq CBX_AUTO_BLACKBOX="ALL" DDIOINCLK_INPUT="NEGATED_INCLK" DEVICE_FAMILY="Cyclone IV E" EXTEND_OE_DISABLE="OFF" INVERT_INPUT_CLOCKS="ON" NUMBER_OF_DQ=8 OE_REG="UNREGISTERED" POWER_UP_HIGH="OFF" datain_h datain_l dataout_h dataout_l inclock oe outclock padio
//VERSION_BEGIN 12.0 cbx_altdq 2012:05:31:20:08:35:SJ cbx_cycloneii 2012:05:31:20:08:35:SJ cbx_mgl 2012:05:31:20:09:47:SJ cbx_stratix 2012:05:31:20:08:35:SJ cbx_stratixii 2012:05:31:20:08:35:SJ cbx_stratixiii 2012:05:31:20:08:35:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463


//synthesis_resources = cycloneive_ddio_out 8 reg 24 TRI 8 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to wire_tri_buf1a_out} MEGAFUNCTION_GENERATED_TRI=ON"} *)
module  mydq_dq_a6o
	( 
	datain_h,
	datain_l,
	dataout_h,
	dataout_l,
	inclock,
	oe,
	outclock,
	padio) /* synthesis synthesis_clearbox=2 */;
	input   [7:0]  datain_h;
	input   [7:0]  datain_l;
	output   [7:0]  dataout_h;
	output   [7:0]  dataout_l;
	input   inclock;
	input   oe;
	input   outclock;
	inout   [7:0]  padio;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   oe;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"DDIO_INPUT_REGISTER=HIGH"} *)
	reg	[7:0]	input_cell_h;
	(* ALTERA_ATTRIBUTE = {"DDIO_INPUT_REGISTER=LOW"} *)
	reg	[7:0]	input_cell_l;
	reg	[7:0]	input_latch_l;
	wire  [7:0]   wire_ddio_outa_datainhi;
	wire  [7:0]   wire_ddio_outa_datainlo;
	wire  [7:0]   wire_ddio_outa_dataout;
	wire	[7:0]	wire_tri_buf1a_out;
	wire  [7:0]  oe_out_wire;

	// synopsys translate_off
	initial
		input_cell_h = 0;
	// synopsys translate_on
	always @ ( negedge inclock)
		  input_cell_h <= padio;
	// synopsys translate_off
	initial
		input_cell_l = 0;
	// synopsys translate_on
	always @ ( posedge inclock)
		  input_cell_l <= padio;
	// synopsys translate_off
	initial
		input_latch_l = 0;
	// synopsys translate_on
	always @ ( negedge inclock)
		  input_latch_l <= input_cell_l;
	cycloneive_ddio_out   ddio_outa_0
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[0:0]),
	.datainlo(wire_ddio_outa_datainlo[0:0]),
	.dataout(wire_ddio_outa_dataout[0:0]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_0.async_mode = "none",
		ddio_outa_0.power_up = "low",
		ddio_outa_0.sync_mode = "none",
		ddio_outa_0.use_new_clocking_model = "true",
		ddio_outa_0.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_1
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[1:1]),
	.datainlo(wire_ddio_outa_datainlo[1:1]),
	.dataout(wire_ddio_outa_dataout[1:1]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_1.async_mode = "none",
		ddio_outa_1.power_up = "low",
		ddio_outa_1.sync_mode = "none",
		ddio_outa_1.use_new_clocking_model = "true",
		ddio_outa_1.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_2
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[2:2]),
	.datainlo(wire_ddio_outa_datainlo[2:2]),
	.dataout(wire_ddio_outa_dataout[2:2]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_2.async_mode = "none",
		ddio_outa_2.power_up = "low",
		ddio_outa_2.sync_mode = "none",
		ddio_outa_2.use_new_clocking_model = "true",
		ddio_outa_2.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_3
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[3:3]),
	.datainlo(wire_ddio_outa_datainlo[3:3]),
	.dataout(wire_ddio_outa_dataout[3:3]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_3.async_mode = "none",
		ddio_outa_3.power_up = "low",
		ddio_outa_3.sync_mode = "none",
		ddio_outa_3.use_new_clocking_model = "true",
		ddio_outa_3.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_4
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[4:4]),
	.datainlo(wire_ddio_outa_datainlo[4:4]),
	.dataout(wire_ddio_outa_dataout[4:4]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_4.async_mode = "none",
		ddio_outa_4.power_up = "low",
		ddio_outa_4.sync_mode = "none",
		ddio_outa_4.use_new_clocking_model = "true",
		ddio_outa_4.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_5
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[5:5]),
	.datainlo(wire_ddio_outa_datainlo[5:5]),
	.dataout(wire_ddio_outa_dataout[5:5]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_5.async_mode = "none",
		ddio_outa_5.power_up = "low",
		ddio_outa_5.sync_mode = "none",
		ddio_outa_5.use_new_clocking_model = "true",
		ddio_outa_5.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_6
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[6:6]),
	.datainlo(wire_ddio_outa_datainlo[6:6]),
	.dataout(wire_ddio_outa_dataout[6:6]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_6.async_mode = "none",
		ddio_outa_6.power_up = "low",
		ddio_outa_6.sync_mode = "none",
		ddio_outa_6.use_new_clocking_model = "true",
		ddio_outa_6.lpm_type = "cycloneive_ddio_out";
	cycloneive_ddio_out   ddio_outa_7
	( 
	.clkhi(outclock),
	.clklo(outclock),
	.datainhi(wire_ddio_outa_datainhi[7:7]),
	.datainlo(wire_ddio_outa_datainlo[7:7]),
	.dataout(wire_ddio_outa_dataout[7:7]),
	.muxsel(outclock)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.areset(1'b0),
	.clk(1'b0),
	.ena(1'b1),
	.sreset(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1),
	.dffhi(),
	.dfflo()
	// synopsys translate_on
	);
	defparam
		ddio_outa_7.async_mode = "none",
		ddio_outa_7.power_up = "low",
		ddio_outa_7.sync_mode = "none",
		ddio_outa_7.use_new_clocking_model = "true",
		ddio_outa_7.lpm_type = "cycloneive_ddio_out";
	assign
		wire_ddio_outa_datainhi = datain_h,
		wire_ddio_outa_datainlo = datain_l;
	assign	wire_tri_buf1a_out[0:0] = (oe_out_wire[0:0] === 1'b1) ? wire_ddio_outa_dataout[0:0] : 1'bz;
	assign	wire_tri_buf1a_out[1:1] = (oe_out_wire[1:1] === 1'b1) ? wire_ddio_outa_dataout[1:1] : 1'bz;
	assign	wire_tri_buf1a_out[2:2] = (oe_out_wire[2:2] === 1'b1) ? wire_ddio_outa_dataout[2:2] : 1'bz;
	assign	wire_tri_buf1a_out[3:3] = (oe_out_wire[3:3] === 1'b1) ? wire_ddio_outa_dataout[3:3] : 1'bz;
	assign	wire_tri_buf1a_out[4:4] = (oe_out_wire[4:4] === 1'b1) ? wire_ddio_outa_dataout[4:4] : 1'bz;
	assign	wire_tri_buf1a_out[5:5] = (oe_out_wire[5:5] === 1'b1) ? wire_ddio_outa_dataout[5:5] : 1'bz;
	assign	wire_tri_buf1a_out[6:6] = (oe_out_wire[6:6] === 1'b1) ? wire_ddio_outa_dataout[6:6] : 1'bz;
	assign	wire_tri_buf1a_out[7:7] = (oe_out_wire[7:7] === 1'b1) ? wire_ddio_outa_dataout[7:7] : 1'bz;
	assign
		dataout_h = input_cell_h,
		dataout_l = input_latch_l,
		oe_out_wire = {8{oe}},
		padio = wire_tri_buf1a_out;
endmodule //mydq_dq_a6o
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module mydq (
	datain_h,
	datain_l,
	inclock,
	oe,
	outclock,
	dataout_h,
	dataout_l,
	padio)/* synthesis synthesis_clearbox = 2 */;

	input	[7:0]  datain_h;
	input	[7:0]  datain_l;
	input	  inclock;
	input	  oe;
	input	  outclock;
	output	[7:0]  dataout_h;
	output	[7:0]  dataout_l;
	inout	[7:0]  padio;

	wire [7:0] sub_wire0;
	wire [7:0] sub_wire1;
	wire [7:0] dataout_h = sub_wire0[7:0];
	wire [7:0] dataout_l = sub_wire1[7:0];

	mydq_dq_a6o	mydq_dq_a6o_component (
				.padio (padio),
				.datain_h (datain_h),
				.datain_l (datain_l),
				.oe (oe),
				.outclock (outclock),
				.inclock (inclock),
				.dataout_h (sub_wire0),
				.dataout_l (sub_wire1))/* synthesis synthesis_clearbox=2
	 clearbox_macroname = ALTDQ
	 clearbox_defparam = "ddioinclk_input=NEGATED_INCLK;extend_oe_disable=OFF;intended_device_family=Cyclone IV E;invert_input_clocks=ON;lpm_hint=UNUSED;lpm_type=altdq;number_of_dq=8;oe_reg=UNREGISTERED;power_up_high=OFF;" */;

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: CONSTANT: DDIOINCLK_INPUT STRING "NEGATED_INCLK"
// Retrieval info: CONSTANT: EXTEND_OE_DISABLE STRING "OFF"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: CONSTANT: INVERT_INPUT_CLOCKS STRING "ON"
// Retrieval info: CONSTANT: LPM_HINT STRING "UNUSED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altdq"
// Retrieval info: CONSTANT: NUMBER_OF_DQ NUMERIC "8"
// Retrieval info: CONSTANT: OE_REG STRING "UNREGISTERED"
// Retrieval info: CONSTANT: POWER_UP_HIGH STRING "OFF"
// Retrieval info: USED_PORT: datain_h 0 0 8 0 INPUT NODEFVAL "datain_h[7..0]"
// Retrieval info: CONNECT: @datain_h 0 0 8 0 datain_h 0 0 8 0
// Retrieval info: USED_PORT: datain_l 0 0 8 0 INPUT NODEFVAL "datain_l[7..0]"
// Retrieval info: CONNECT: @datain_l 0 0 8 0 datain_l 0 0 8 0
// Retrieval info: USED_PORT: dataout_h 0 0 8 0 OUTPUT NODEFVAL "dataout_h[7..0]"
// Retrieval info: CONNECT: dataout_h 0 0 8 0 @dataout_h 0 0 8 0
// Retrieval info: USED_PORT: dataout_l 0 0 8 0 OUTPUT NODEFVAL "dataout_l[7..0]"
// Retrieval info: CONNECT: dataout_l 0 0 8 0 @dataout_l 0 0 8 0
// Retrieval info: USED_PORT: inclock 0 0 0 0 INPUT_CLK_EXT NODEFVAL "inclock"
// Retrieval info: CONNECT: @inclock 0 0 0 0 inclock 0 0 0 0
// Retrieval info: USED_PORT: oe 0 0 0 0 INPUT NODEFVAL "oe"
// Retrieval info: CONNECT: @oe 0 0 0 0 oe 0 0 0 0
// Retrieval info: USED_PORT: outclock 0 0 0 0 INPUT_CLK_EXT NODEFVAL "outclock"
// Retrieval info: CONNECT: @outclock 0 0 0 0 outclock 0 0 0 0
// Retrieval info: USED_PORT: padio 0 0 8 0 BIDIR NODEFVAL "padio[7..0]"
// Retrieval info: CONNECT: padio 0 0 8 0 @padio 0 0 8 0
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq.v TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq.qip TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq.bsf TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq_inst.v TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq_bb.v TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq.inc TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq.cmp TRUE TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydq.ppf TRUE FALSE
// Retrieval info: LIB_FILE: cycloneive
